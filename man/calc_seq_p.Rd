% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_seq_p.R
\name{calc_seq_p}
\alias{calc_seq_p}
\title{Calculate sequential p-values for interaction/elementary hypothesis}
\usage{
calc_seq_p(
  test_analysis = 1,
  test_hypothesis = "H1, H2, H3",
  p_obs,
  alpha_spending_type = 3,
  n_analysis = 2,
  initial_weight,
  transition_mat,
  z_corr,
  spending_fun,
  spending_fun_par,
  info_frac,
  interval = c(1e-04, 0.2)
)
}
\arguments{
\item{test_analysis}{The index of the analysis to be tested, such as 1, 2, ...}

\item{test_hypothesis}{A character of the tested interaction/elementary hypothesis,
such as \code{"H1, H2, H3"}, \verb{H1, H2}, \code{"H1"}.}

\item{p_obs}{Observed p-values.}

\item{alpha_spending_type}{Type Boundary type.
\itemize{
\item \code{0} - Bonferroni. Separate alpha spending for each hypotheses.
\item \code{1} - Fixed alpha spending for all hypotheses. Method 3a in the manuscript.
\item \code{2} - Overall alpha spending for all hypotheses. Method 3b in the manuscript.
\item \code{3} - Separate alpha spending for each hypotheses. Method 3c in the manuscript.
}}

\item{n_analysis}{Total number of analysis.}

\item{initial_weight}{Initial weight assigned to the elementary hypothesis.}

\item{transition_mat}{Transition matrix.}

\item{z_corr}{Correlation matrix of the Z statistics.}

\item{spending_fun}{Spending function.}

\item{spending_fun_par}{Parameter of the spending function.}

\item{info_frac}{Information fractions.}

\item{interval}{Interval to search the uniroot.}
}
\value{
The sequential p-values of the \code{test_hypothesis} at the \code{test_analysis}.
}
\description{
Calculate sequential p-values for interaction/elementary hypothesis
}
\examples{
p_obs <- dplyr::bind_rows(
  tibble::tibble(Analysis = 1, H1 = 0.001, H2 = 0.001),
  tibble::tibble(Analysis = 2, H1 = 0.001, H2 = 0.001)
)
bound <- tibble::tribble(
  ~Analysis, ~Hypotheses, ~H1, ~H2,
  1, "H1", 0.02, NA,
  1, "H1, H2", 0.0001, 0.00001,
  1, "H2", NA, 0.003,
  2, "H1", 0.02, NA,
  2, "H1, H2", 0.02, 0.00001,
  2, "H2", NA, 0.003
)

closed_test <- closed_test(bound, p_obs)
}
